clean up fields
	(except public/internal readonly <GalWar object>, private readonly IEnumerable<<GalWar object>>)
	objs
		Graphs
		ShipDesign
	consistent ordering
	start with _ 
	fields directly set in constructors
	have at least private getter/setters
	checked context for setters/constructors
	no field usage outside of properties/constructors

remove casts
	pervasive float usage
revisit fields
	all private
		can do public/internal readonly <GalWar object>, private readonly IEnumerable<<GalWar object>>
	readonly
	property visibility
	data types
	[NonSerialized]

no public setters
remove other checked contexts
check usage of public properties with TurnException.CheckTurn(this)
check all field usage, and field property usage

clean up planet defense interface
	GetBuildingDefense
	when buying PD show expected values
	see free damage enemy will get vs friendly colony
combat calc show probability table
show enemy moves/attacks ignoring friendly ships, weight for HP?
test exact vs oversize dictionary capacity for combat performance
main map improvements
	ship speed/type
	zooming, panning
	minimap
management screens
	colonies
	ships

starting gold uses ColonyCost functionality with some high mult
anomaly neutral ships?
private Player[] players should be a readonly list
public Player constructor should be a separate object

known enemy designs
AI
	integrate AI-algorithm guesses into game for player to use as well
	event needs to be pulled out of other handler stuff and only show events for things visible to other players
shroud
